- Register
	- Client: send to server -> E[server public key, (user, pass, public key, nonce)] with signiture
	- Server: send to client -> E[client public key, (nonce + 1)] with signiture
	
	- Database: (public key, user, (pass+salt) hash, salt)
	
- Login
	- Client: send to server -> E[server public key, (user, pass, nonce)] with signiture
	- Server: send to client -> E[client public key, (token, nonce + 1)] with signiture
	
- Establish Connection Between 2 Clients:
	- Client 1: send to server  -> E[server public key, (token1, user1, user2, nonce1)] with validation
	- Server:   send to client1 -> E[client1 public key, (user1, user2, nonce1 + 1, client2 public key)] with validation
	- Client 1: send to server  -> E[server public key, (token1, user1, user2, nonce2, E[client2 public key, (user1, session_key)])]
	- Server:	send to client1 -> E[client1 public key, (user1, nonce2+1)]
	
	- Database: insert into queue of messages to be sent (user1, user2, E[client2 public key, (user1, session_key)], Time, Hash)
	whenever client2 is online
	
	- Server:	send to client2 -> E[client2 public key, (client1 public key, E[client2 public key, (user1, session_key)], Hash(user1, session_key), Time, nonce)] 
	- Client 2: send to server  -> E[server public key, (token2, nonce + 1, E[session_key, (user1, user2)])]
	
	- Database: insert into queue of messages to be sent (user2, user1, E[session_key, (user1, user2)], Time, Hash)
	whenever client1 is online
	
	- Server:   send to client1 -> E[client1 public key, (E[session_key, (user1, user2)], Time, Hash, nonce)]
	- Client 1: send to server  -> E[server public key, (nonce+1, token1)]
	
- Messaging:
	- Client 1: send to server  -> E[server public key, (token1, user1, user2, nonce1, E[session_key, (message, user1)])]
	- Server:	send to client1 -> E[client1 public key, (user1, nonce1+1)]
	
	- Database: insert into queue of messages to be sent (user1, user2, E[session_key, (message, user1)], Time, Hash)
	whenever client2 is online
	- Server:   send to client2 -> E[client2 public key, (nonce, E[session_key, (message, user1)])]
	- Client 2: send to server  -> E[server public key, (token2, nonce + 1)]

- Online Users:
	- Client:   send to server -> E[server public key, (token1, 'list of online users', nonce)]
	- Server:	send to client -> E[client public key, (nonce+1, list_of_online_users)]
	
- Create Group:
	- Client:   send to server -> E[server public key, (token1, infos, nonce)], generate Group Key + validation things
	- Server:	send to client -> E[client public key, (nonce+1, group_id)]
	- Database: insert group (admin_id, group_id, users=[])

- Add Member:
	- Client 1: send to server  -> E[server public key, (token1, user1, user2, group_id, nonce1)] with validation
	- Server:   send to client1 -> E[client1 public key, (user1, user2, nonce1 + 1, client2 public key)] with validation
	- Client 1: send to server  -> E[server public key, (token1, user1, user2, nonce2, E[client2 public key, (user1, group_key)])]
	- Server:	send to client1 -> E[client1 public key, (user1, nonce2+1)]
	
	- Database: insert into queue of messages to be sent (user1, user2, E[client2 public key, (user1, group_key)], Time, Hash)
	whenever client2 is online
	
	- Server:	send to client2 -> E[client2 public key, (client1 public key, E[client2 public key, (user1, group_key)], Hash(user1, group_key), Time, nonce)] 
	- Client 2: send to server  -> E[server public key, (token2, nonce + 1, E[group_key, (user1, user2)])]
	
	- Database: add user2 to group
	
	- Database: insert into queue of messages to be sent (user2, user1, E[group_key, (user1, user2)], Time, Hash)
	whenever client1 is online
	
	- Server:   send to client1 -> E[client1 public key, (E[group_key, (user1, user2)], Time, Hash, nonce)]
	- Client 1: send to server  -> E[server public key, (nonce+1, token1)]
	
- Messaging in Group:
	- Client: 	send to server  -> E[server public key, (token, user, group_id, nonce, E[group_key, (message, user)])]
	- Server:	send to client1 -> E[client public key, (user, nonce+1)]
	
	for all clients in the group:
		- Database: insert into queue of messages to be sent (user1, user2, E[group_key, (message, user1)], Time, Hash, group_id)
		whenever client_i is online
		- Server:   send to client2 -> E[client2 public key, (nonce, E[group_key, (message, user1)])]
		- Client 2: send to server  -> E[server public key, (token2, nonce + 1)]
	
- Remove Member:
	- Client: 	send to server -> E[server public key, (token, user_1, user_2, group_id, nonce)]
	
	- Database: delete user from group
	- Server:   send to client -> E[client public key, (user, nonce+1)]
	for all clients in group:
		- Database: insert into queue of messages to be sent (_, client_i, seed, Time, Hash, group_id)
		whenever client_i is online
		- Server:   send to client_i -> E[client2 public key, (nonce, seed, group_id)]
		- Client 2: send to server  -> E[server public key, (token2, nonce + 1)] and update group_key by themselves.